{
    "source": 2,
    "revision": 309,
    "description": null,
    "createdBy": {
      "displayName": "Hassan Tariq",
      "url": "https://spsprodeau1.vssps.visualstudio.com/Aa03fb2e9-388e-4971-b5c5-96468575cfc5/_apis/Identities/7d36de27-6397-6e58-9a14-7a8275ce47be",
      "_links": {
        "avatar": {
          "href": "https://dev.azure.com/willowdev/_apis/GraphProfile/MemberAvatars/aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl"
        }
      },
      "id": "7d36de27-6397-6e58-9a14-7a8275ce47be",
      "uniqueName": "HTariq@willowinc.com",
      "imageUrl": "https://dev.azure.com/willowdev/_apis/GraphProfile/MemberAvatars/aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl",
      "descriptor": "aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl"
    },
    "createdOn": "2019-11-25T03:18:03.353Z",
    "modifiedBy": {
      "displayName": "Hassan Tariq",
      "url": "https://spsprodeau1.vssps.visualstudio.com/Aa03fb2e9-388e-4971-b5c5-96468575cfc5/_apis/Identities/7d36de27-6397-6e58-9a14-7a8275ce47be",
      "_links": {
        "avatar": {
          "href": "https://dev.azure.com/willowdev/_apis/GraphProfile/MemberAvatars/aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl"
        }
      },
      "id": "7d36de27-6397-6e58-9a14-7a8275ce47be",
      "uniqueName": "HTariq@willowinc.com",
      "imageUrl": "https://dev.azure.com/willowdev/_apis/GraphProfile/MemberAvatars/aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl",
      "descriptor": "aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl"
    },
    "modifiedOn": "2020-10-13T04:22:17.400Z",
    "isDeleted": false,
    "lastRelease": {
      "id": 748,
      "name": "Release-366",
      "artifacts": [],
      "_links": {},
      "description": "",
      "releaseDefinition": {
        "id": 5,
        "projectReference": null,
        "_links": {}
      },
      "createdOn": "2020-10-09T04:39:02.057Z",
      "createdBy": {
        "displayName": "Hassan Tariq",
        "url": "https://spsprodeau1.vssps.visualstudio.com/Aa03fb2e9-388e-4971-b5c5-96468575cfc5/_apis/Identities/7d36de27-6397-6e58-9a14-7a8275ce47be",
        "_links": {
          "avatar": {
            "href": "https://dev.azure.com/willowdev/_apis/GraphProfile/MemberAvatars/aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl"
          }
        },
        "id": "7d36de27-6397-6e58-9a14-7a8275ce47be",
        "uniqueName": "HTariq@willowinc.com",
        "imageUrl": "https://dev.azure.com/willowdev/_apis/GraphProfile/MemberAvatars/aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl",
        "descriptor": "aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl"
      }
    },
    "variables": {
      "adf_vsts_branch_name": {
        "value": "master"
      },
      "adf_vsts_project_name": {
        "value": "Innovation"
      },
      "adf_vsts_repository_name": {
        "value": "Innovation"
      },
      "adf_vsts_root_folder": {
        "value": "/"
      },
      "alerts_enabled": {
        "value": "false"
      },
      "app_service_enable_autoscale": {
        "value": "false"
      },
      "app_service_plan_sku_size": {
        "value": "B1"
      },
      "app_service_plan_sku_size_livedata": {
        "value": "B2"
      },
      "app_service_plan_sku_size_platform": {
        "value": "B2"
      },
      "app_service_plan_sku_tier": {
        "value": "Basic"
      },
      "app_service_plan_sku_tier_livedata": {
        "value": "Basic"
      },
      "app_service_plan_sku_tier_platform": {
        "value": "Basic"
      },
      "configuration_aue_auth0_clientid": {
        "value": "kcR1D9CdLY68tMrJJBy6YDqdiZnPs7TF"
      },
      "configuration_aue_auth0_clientsecret": {
        "value": "tqJrMC_TZhKwP2am5UZrwBlrcneVEedfuVjrWM2gdSoGjtVgNKpVAOcfkCefEcRL"
      },
      "configuration_auth0_audience": {
        "value": "https://willowtwin-web-dev"
      },
      "configuration_auth0_clientid": {
        "value": "3xzwXNhdJBrL1ML4S732g9EIeK44QIQr"
      },
      "configuration_auth0_domain": {
        "value": "willowtwin-dev.au.auth0.com"
      },
      "configuration_auth0_managementaudience": {
        "value": "https://willowtwin-dev.au.auth0.com/api/v2/"
      },
      "configuration_auth0_managementclientid": {
        "value": "Vxh1BjL2AQssRl0dyE3X7VYTc3gZIyxp"
      },
      "configuration_dataprotection_keyvaultname": {
        "value": "wplatform-kv-dev-global"
      },
      "configuration_dataprotection_storageaccountname": {
        "value": "wplatformdataprotectdev"
      },
      "configuration_eu2_auth0_clientid": {
        "value": "kPmjjbmncBxnZKPBmZ1qpvZ0XHMmiy2X"
      },
      "configuration_eu2_auth0_clientsecret": {
        "value": "dTYIJpUZESgx98V9oOE3jz1kcfKQrpYVfV_X9p9EP6IBAQCAL9pARg5qOwxT2lS6"
      },
      "configuration_httpclientfactory_auth0_baseaddress": {
        "value": "https://willowtwin-dev.au.auth0.com"
      },
      "configuration_storages_cachedimage_accountname": {
        "value": "mp4images4dev4aue"
      },
      "configuration_storages_originalimage_accountname": {
        "value": "mp4images4dev4aue"
      },
      "configuration_weu_auth0_clientid": {
        "value": "kPmjjbmncBxnZKPBmZ1qpvZ0XHMmiy2X"
      },
      "configuration_weu_auth0_clientsecret": {
        "value": "dTYIJpUZESgx98V9oOE3jz1kcfKQrpYVfV_X9p9EP6IBAQCAL9pARg5qOwxT2lS6"
      },
      "customers": {
        "value": "cu1"
      },
      "defaultRegion": {
        "value": "aue"
      },
      "eventhub_message_retention": {
        "value": "7"
      },
      "eventhub_partition": {
        "value": "2"
      },
      "eventhub_sku": {
        "value": "Basic"
      },
      "frontdoor_dns_name": {
        "value": ""
      },
      "frontdoor_probe_interval_in_seconds": {
        "value": "255"
      },
      "iot_hub_sku_capacity": {
        "value": "1"
      },
      "iot_hub_sku_name": {
        "value": "S1"
      },
      "iot_hub_sku_tier": {
        "value": "Standard"
      },
      "isDeployAdmin": {
        "value": "true"
      },
      "isDeployAlarm": {
        "value": "true"
      },
      "isDeployAnalytics": {
        "value": "true"
      },
      "isDeployCustomers": {
        "value": "true"
      },
      "isDeployGlobal": {
        "value": "true"
      },
      "isDeployLiveData": {
        "value": "true"
      },
      "isDeployMarketPlace": {
        "value": "true"
      },
      "isDeployMarketPlaceApplications": {
        "value": "true"
      },
      "isDeployPlatform": {
        "value": "true"
      },
      "location": {
        "value": "australiaeast"
      },
      "marketplace_applications": {
        "value": "cpt,pgb,sap,smn,mod,bac,oda,oua,fou,ins,imp,lut,247,ang,nrd,vgs"
      },
      "notification_emails": {
        "value": "commandsupport@willowinc.com"
      },
      "notification_hub_apns_bundle_id": {
        "value": "com.willowinc.willow-command-dev"
      },
      "notification_hub_apns_key_id": {
        "value": "ZJH9S8F3P7"
      },
      "notification_hub_apns_token": {
        "value": "MIGTAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBHkwdwIBAQQgOuR3nrvGn2auA/Z8 ZAfxOqZMiRvxHVFrTgu2yEtiQPWgCgYIKoZIzj0DAQehRANCAASel1bYmOR2udiY xBML5HoujcOQ7Pdb1dpJzyBAlgeENovIbjDiImAwoWILo3xlAsa4SCqYPovajskl Zj9xrA0z"
      },
      "notification_hub_gcm_api_key": {
        "value": "AAAAQcvdOsQ:APA91bEstgod2p2k8LKxK3NibrEjuPJaRCHFx2UInQj_cteMrqzbUmLLbcuoV-59L75brQnd-7oP4HOPwVuNDWq0yz_aT2eSZ857fiOW3Ym2-1wYf1gdWbmTdAXHiucypgiFJliTQYmT"
      },
      "notification_hub_sku_name": {
        "value": "Free"
      },
      "oms_sku": {
        "value": "PerGB2018"
      },
      "postgresql_administrator_password": {
        "value": "W1ll0w!W1ll0w!"
      },
      "postgresql_backup_retention_days": {
        "value": "7"
      },
      "postgresql_sku_name": {
        "value": "B_Gen5_2"
      },
      "postgresql_storage_mb": {
        "value": "51200"
      },
      "project": {
        "value": "platform"
      },
      "project_prefix": {
        "value": "lda"
      },
      "redis_cache_sku_capacity": {
        "value": "1"
      },
      "redis_cache_sku_name": {
        "value": "Standard"
      },
      "retention_in_days": {
        "value": "30"
      },
      "servicebus_namespace_sku": {
        "value": "standard"
      },
      "servicebus_queue_max_size_in_megabytes": {
        "value": "1024"
      },
      "servicebus_queues": {
        "value": "data"
      },
      "servicebus_subscription_max_delivery_count": {
        "value": "1"
      },
      "servicebus_topics": {
        "value": "topic1"
      },
      "sql_administrator_password": {
        "value": "W1ll0w!W1ll0w!"
      },
      "sql_backup_week_of_year": {
        "value": "10"
      },
      "sql_database_edition": {
        "value": "Basic"
      },
      "sql_database_edition_livedata": {
        "value": "Standard"
      },
      "sql_database_requested_service_objective_name": {
        "value": "Basic"
      },
      "sql_database_requested_service_objective_name_livedata": {
        "value": "S2"
      },
      "storage_account_create_container": {
        "value": "false"
      },
      "storage_account_replication_type": {
        "value": "LRS"
      },
      "storage_account_retention_days": {
        "value": "30"
      },
      "storage_account_tier": {
        "value": "Standard"
      },
      "subscription_id": {
        "value": "249312a0-4c83-4d73-b164-18c5e72bf219"
      },
      "TF-version": {
        "value": "0.12.31"
      },
      "tier": {
        "value": "3"
      },
      "zone": {
        "value": "1"
      }
    },
    "variableGroups": [
      8
    ],
    "environments": [
      {
        "id": 5,
        "name": "sbx",
        "rank": 1,
        "owner": {
          "displayName": "Hassan Tariq",
          "url": "https://spsprodeau1.vssps.visualstudio.com/Aa03fb2e9-388e-4971-b5c5-96468575cfc5/_apis/Identities/7d36de27-6397-6e58-9a14-7a8275ce47be",
          "_links": {
            "avatar": {
              "href": "https://dev.azure.com/willowdev/_apis/GraphProfile/MemberAvatars/aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl"
            }
          },
          "id": "7d36de27-6397-6e58-9a14-7a8275ce47be",
          "uniqueName": "HTariq@willowinc.com",
          "imageUrl": "https://dev.azure.com/willowdev/_apis/GraphProfile/MemberAvatars/aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl",
          "descriptor": "aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl"
        },
        "variables": {
          "marketplace_applications": {
            "value": "abc,nrd"
          }
        },
        "variableGroups": [],
        "preDeployApprovals": {
          "approvals": [
            {
              "rank": 1,
              "isAutomated": true,
              "isNotificationOn": false,
              "id": 13
            }
          ],
          "approvalOptions": {
            "requiredApproverCount": null,
            "releaseCreatorCanBeApprover": false,
            "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
            "enforceIdentityRevalidation": false,
            "timeoutInMinutes": 0,
            "executionOrder": 1
          }
        },
        "deployStep": {
          "id": 14
        },
        "postDeployApprovals": {
          "approvals": [
            {
              "rank": 1,
              "isAutomated": true,
              "isNotificationOn": false,
              "id": 15
            }
          ],
          "approvalOptions": {
            "requiredApproverCount": null,
            "releaseCreatorCanBeApprover": false,
            "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
            "enforceIdentityRevalidation": false,
            "timeoutInMinutes": 0,
            "executionOrder": 2
          }
        },
        "deployPhases": [
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": true,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "succeeded()",
              "overrideInputs": {}
            },
            "rank": 1,
            "phaseType": 1,
            "name": "Deploying T2",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=tier;]2\"\nWrite-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]lda\"",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/shared",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/shared",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_shared.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/shared"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/shared",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=shared.tfplan",
                  "environmentServiceNameAzureRM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/shared",
                  "commandOptions": "shared.tfplan",
                  "environmentServiceNameAzureRM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/shared",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Agent Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-AzDevOpsVariables.ps1",
                  "arguments": "-agentVariables @{'t2ResourceGroupName'='$(TF_diagnostics_resource_group_name)';'environment'='$(TF_environment)';}",
                  "script": "Write-Host \"##vso[task.setvariable variable=tier;]2\"\nWrite-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\n#Write-Host \"##vso[task.setvariable variable=customer_prefix;]$(customers)\"\n#Write-Host \"##vso[task.setvariable variable=shared_resource_group_name;]$(shared_resource_group_name)\"\n#Write-Host \"##vso[task.setvariable variable=shared_storage_account_name;]$(shared_storage_account_name)\"\n#Write-Host \"##vso[task.setvariable variable=location;]$(location)\"\n#Write-Host \"##vso[task.setvariable variable=project_prefix;]$(project_prefix)\"\n#Write-Host \"##vso[task.setvariable variable=environment;]$(environment)\"\n#Write-Host \"##vso[task.setvariable variable=storage_account_tier;]$(storage_account_tier)\"\n#Write-Host \"##vso[task.setvariable variable=storage_account_replication_type;]$(storage_account_replication_type)\"\n#Write-Host \"##vso[task.setvariable variable=app_service_plan_sku_size;]$(app_service_plan_sku_size)\"\n#Write-Host \"##vso[task.setvariable variable=iot_hub_sku_name;]$(iot_hub_sku_name)\"\n#Write-Host \"##vso[task.setvariable variable=iot_hub_sku_tier;]$(iot_hub_sku_tier)\"\n#Write-Host \"##vso[task.setvariable variable=iot_hub_sku_capacity;]$(iot_hub_sku_capacity)\"\n#Write-Host \"##vso[task.setvariable variable=postgresql_administrator_password;]$(postgresql_administrator_password)\"\n#Write-Host \"##vso[task.setvariable variable=postgresql_sku_name;]$(postgresql_sku_name)\"\n#Write-Host \"##vso[task.setvariable variable=postgresql_sku_capacity;]$(postgresql_sku_capacity)\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "and(eq(variables['isDeployGlobal'], true),eq(variables['location'], 'australiaeast'))",
              "overrideInputs": {}
            },
            "rank": 2,
            "phaseType": 1,
            "name": "Deploying T2 Global resources",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=tier;]2\"\nWrite-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]lda\"",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/global",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/global",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_global.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/global"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/global",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=global.tfplan",
                  "environmentServiceNameAzureRM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/global",
                  "commandOptions": "global.tfplan",
                  "environmentServiceNameAzureRM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": true,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "eq(variables['isDeployLiveData'], true)",
              "overrideInputs": {}
            },
            "rank": 3,
            "phaseType": 1,
            "name": "Deploying LiveData",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]lda\"",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/livedata",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/livedata",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_livedata.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/livedata"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/livedata",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=livedata.tfplan",
                  "environmentServiceNameAzureRM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/livedata",
                  "commandOptions": "livedata.tfplan",
                  "environmentServiceNameAzureRM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/livedata",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Terraform Output variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-AzDevOpsVariables.ps1",
                  "arguments": "-agentVariables @{'livedata_resource_group_name'='$(TF_RESOURCE_GROUP_NAME)';}",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)'",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "multipliers": "customers",
                "maxNumberOfAgents": 3,
                "continueOnError": true,
                "parallelExecutionType": 1
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": [
                  {
                    "alias": "artifact",
                    "artifactType": "Build",
                    "artifactDownloadMode": "All",
                    "artifactItems": []
                  }
                ]
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "eq(variables['isDeployCustomers'], true)",
              "overrideInputs": {}
            },
            "rank": 4,
            "phaseType": 1,
            "name": "Deploying Customer",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]lda\"\nWrite-Host \"##vso[task.setvariable variable=customer_prefix;]$(customers)\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/customers/",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "true"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/customers",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_customer_$(customer_prefix).tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/customers"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/customers",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=customer_$(customer_prefix).tfplan",
                  "environmentServiceNameAzureRM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/customers",
                  "commandOptions": "customer_$(customer_prefix).tfplan",
                  "environmentServiceNameAzureRM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/customers",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(LIVEDATA_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)'",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "eq(variables['isDeployPlatform'], true)",
              "overrideInputs": {}
            },
            "rank": 5,
            "phaseType": 1,
            "name": "Deploying Platform",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]plt\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/platform",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/platform",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_platform.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/platform"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/platform",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=platform.tfplan",
                  "environmentServiceNameAzureRM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/platform",
                  "commandOptions": "platform.tfplan",
                  "environmentServiceNameAzureRM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/platform",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -excludeWebApps @('*portalweb*','*mobileweb*')",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "eq(variables['isDeployAnalytics'], true)",
              "overrideInputs": {}
            },
            "rank": 6,
            "phaseType": 1,
            "name": "Deploying Analytics",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]alt\"",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/analytics",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/analytics",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_analytics.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/analytics"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/analytics",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=analytics.tfplan",
                  "environmentServiceNameAzureRM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/analytics",
                  "commandOptions": "analytics.tfplan",
                  "environmentServiceNameAzureRM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "eq(variables['isDeployAlarm'], true)",
              "overrideInputs": {}
            },
            "rank": 7,
            "phaseType": 1,
            "name": "Deploying Alarm",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]alm\"",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/alarm",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/alarm",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_alarm.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/alarm"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/alarm",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=alarm.tfplan",
                  "environmentServiceNameAzureRM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/alarm",
                  "commandOptions": "alarm.tfplan",
                  "environmentServiceNameAzureRM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "and(eq(variables['isDeployAdmin'], true),eq(variables['location'], 'australiaeast'))",
              "overrideInputs": {}
            },
            "rank": 8,
            "phaseType": 1,
            "name": "Deploying Admin",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]adm\"",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/admin",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/admin",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_admin.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/admin"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/admin",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=admin.tfplan",
                  "environmentServiceNameAzureRM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/admin",
                  "commandOptions": "admin.tfplan",
                  "environmentServiceNameAzureRM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/admin",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)'  -excludeWebApps @('*adminportalweb*')",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": true,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "and(eq(variables['isDeployMarketPlace'], true),eq(variables['location'], 'australiaeast'))",
              "overrideInputs": {}
            },
            "rank": 9,
            "phaseType": 1,
            "name": "Deploying MarketPlace",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]mkp\"",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/marketplace",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/marketplace",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_marketplace.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/marketplace"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/marketplace",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=marketplace.tfplan",
                  "environmentServiceNameAzureRM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/marketplace",
                  "commandOptions": "marketplace.tfplan",
                  "environmentServiceNameAzureRM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/marketplace",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Terraform Output variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-AzDevOpsVariables.ps1",
                  "arguments": "-agentVariables @{'marketplace_resource_group_name'='$(TF_RESOURCE_GROUP_NAME)';}",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -keyPermissions @('get','list','wrapkey','unwrapkey','encrypt','decrypt','verify','sign')",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "multipliers": "marketplace_applications",
                "maxNumberOfAgents": 3,
                "continueOnError": true,
                "parallelExecutionType": 1
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "and(eq(variables['isDeployMarketPlaceApplications'], true),eq(variables['location'], 'australiaeast'))",
              "overrideInputs": {}
            },
            "rank": 10,
            "phaseType": 1,
            "name": "Deploying MP App",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]mkp\"\nWrite-Host \"##vso[task.setvariable variable=application_prefix;]$(marketplace_applications)\"",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/applications",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/applications",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_marketplace_$(application_prefix).tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/applications"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/applications",
                  "commandOptions": "-var-file=parameters/terraform.tfvars  -out=marketplace_$(application_prefix).tfplan",
                  "environmentServiceNameAzureRM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/applications",
                  "commandOptions": "marketplace_$(application_prefix).tfplan",
                  "environmentServiceNameAzureRM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/applications",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -keyPermissions @('get','wrapkey','unwrapkey') -secretPermissions @('get','list')",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set Shared Marketplace KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(MARKETPLACE_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -keyPermissions @('get','list','wrapkey','unwrapkey','encrypt','decrypt','verify','sign') -secretPermissions @('get','list')",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "succeeded()",
              "overrideInputs": {}
            },
            "rank": 11,
            "phaseType": 1,
            "name": "Finalize",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set Shared KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(t2ResourceGroupName)' -appResourceGroup '$(t2ResourceGroupName)' -keyPermissions @('get','wrapkey','unwrapkey') -secretPermissions @() -excludeWebApps @('*portalweb*','*mobileweb*') -project '$(project)' -zone $(zone) -tier $(tier) -environment '$(environment)' -defaultRegion '$(defaultRegion)' -processAllWebApps",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          }
        ],
        "environmentOptions": {
          "emailNotificationType": "OnlyOnFailure",
          "emailRecipients": "release.environment.owner;release.creator",
          "skipArtifactsDownload": false,
          "timeoutInMinutes": 0,
          "enableAccessToken": false,
          "publishDeploymentStatus": true,
          "badgeEnabled": false,
          "autoLinkWorkItems": false,
          "pullRequestDeploymentEnabled": false
        },
        "demands": [],
        "conditions": [
          {
            "name": "ReleaseStarted",
            "conditionType": 1,
            "value": ""
          }
        ],
        "executionPolicy": {
          "concurrencyCount": 1,
          "queueDepthCount": 0
        },
        "schedules": [],
        "currentRelease": {
          "id": 714,
          "url": "https://vsrm.dev.azure.com/willowdev/64dd60c0-df93-46fe-b298-ec929c5029f8/_apis/Release/releases/714",
          "_links": {}
        },
        "retentionPolicy": {
          "daysToKeep": 30,
          "releasesToKeep": 3,
          "retainBuild": true
        },
        "processParameters": {},
        "properties": {
          "BoardsEnvironmentType": {
            "$type": "System.String",
            "$value": "unmapped"
          },
          "LinkBoardsWorkItems": {
            "$type": "System.String",
            "$value": "False"
          }
        },
        "preDeploymentGates": {
          "id": 0,
          "gatesOptions": null,
          "gates": []
        },
        "postDeploymentGates": {
          "id": 0,
          "gatesOptions": null,
          "gates": []
        },
        "environmentTriggers": [],
        "badgeUrl": "https://vsrm.dev.azure.com/willowdev/_apis/public/Release/badge/64dd60c0-df93-46fe-b298-ec929c5029f8/5/5"
      },
      {
        "id": 7,
        "name": "dev",
        "rank": 2,
        "owner": {
          "displayName": "Hassan Tariq",
          "url": "https://spsprodeau1.vssps.visualstudio.com/Aa03fb2e9-388e-4971-b5c5-96468575cfc5/_apis/Identities/7d36de27-6397-6e58-9a14-7a8275ce47be",
          "_links": {
            "avatar": {
              "href": "https://dev.azure.com/willowdev/_apis/GraphProfile/MemberAvatars/aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl"
            }
          },
          "id": "7d36de27-6397-6e58-9a14-7a8275ce47be",
          "uniqueName": "HTariq@willowinc.com",
          "imageUrl": "https://dev.azure.com/willowdev/_apis/GraphProfile/MemberAvatars/aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl",
          "descriptor": "aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl"
        },
        "variables": {},
        "variableGroups": [],
        "preDeployApprovals": {
          "approvals": [
            {
              "rank": 1,
              "isAutomated": false,
              "isNotificationOn": false,
              "approver": {
                "displayName": "Hassan Tariq",
                "url": "https://spsprodeau1.vssps.visualstudio.com/Aa03fb2e9-388e-4971-b5c5-96468575cfc5/_apis/Identities/7d36de27-6397-6e58-9a14-7a8275ce47be",
                "_links": {
                  "avatar": {
                    "href": "https://dev.azure.com/willowdev/_apis/GraphProfile/MemberAvatars/aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl"
                  }
                },
                "id": "7d36de27-6397-6e58-9a14-7a8275ce47be",
                "uniqueName": "HTariq@willowinc.com",
                "imageUrl": "https://dev.azure.com/willowdev/_apis/GraphProfile/MemberAvatars/aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl",
                "descriptor": "aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl"
              },
              "id": 20
            }
          ],
          "approvalOptions": {
            "requiredApproverCount": null,
            "releaseCreatorCanBeApprover": true,
            "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
            "enforceIdentityRevalidation": false,
            "timeoutInMinutes": 1440,
            "executionOrder": 1
          }
        },
        "deployStep": {
          "id": 21
        },
        "postDeployApprovals": {
          "approvals": [
            {
              "rank": 1,
              "isAutomated": true,
              "isNotificationOn": false,
              "id": 22
            }
          ],
          "approvalOptions": {
            "requiredApproverCount": null,
            "releaseCreatorCanBeApprover": false,
            "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
            "enforceIdentityRevalidation": false,
            "timeoutInMinutes": 0,
            "executionOrder": 2
          }
        },
        "deployPhases": [
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": true,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "succeeded()",
              "overrideInputs": {}
            },
            "rank": 1,
            "phaseType": 1,
            "name": "Deploying T2",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=tier;]2\"\nWrite-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/shared",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/shared",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_shared.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/shared"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/shared",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=shared.tfplan",
                  "environmentServiceNameAzureRM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/shared",
                  "commandOptions": "shared.tfplan",
                  "environmentServiceNameAzureRM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/shared",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-AzDevOpsVariables.ps1",
                  "arguments": "-agentVariables @{'t2ResourceGroupName'='$(TF_diagnostics_resource_group_name)';'environment'='$(TF_environment)';}",
                  "script": "Write-Host \"##vso[task.setvariable variable=tier;]2\"\nWrite-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "and(eq(variables['isDeployGlobal'], true),eq(variables['location'], 'australiaeast'))",
              "overrideInputs": {}
            },
            "rank": 2,
            "phaseType": 1,
            "name": "Deploying T2 Global resources",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=tier;]2\"\nWrite-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]lda\"",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/global",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/global",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_global.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/global"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/global",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=global.tfplan",
                  "environmentServiceNameAzureRM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/global",
                  "commandOptions": "global.tfplan",
                  "environmentServiceNameAzureRM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": true,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "eq(variables['isDeployLiveData'], true)",
              "overrideInputs": {}
            },
            "rank": 3,
            "phaseType": 1,
            "name": "Deploying LiveData",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/livedata",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/livedata",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_livedata.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/livedata"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/livedata",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=livedata.tfplan",
                  "environmentServiceNameAzureRM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/livedata",
                  "commandOptions": "livedata.tfplan",
                  "environmentServiceNameAzureRM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/livedata",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Terraform Output variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-AzDevOpsVariables.ps1",
                  "arguments": "-agentVariables @{'livedata_resource_group_name'='$(TF_RESOURCE_GROUP_NAME)';}",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)'",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "multipliers": "customers",
                "maxNumberOfAgents": 3,
                "continueOnError": false,
                "parallelExecutionType": 1
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": [
                  {
                    "alias": "artifact",
                    "artifactType": "Build",
                    "artifactDownloadMode": "All",
                    "artifactItems": []
                  }
                ]
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "eq(variables['isDeployCustomers'], true)",
              "overrideInputs": {}
            },
            "rank": 4,
            "phaseType": 1,
            "name": "Deploying Customer",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=customer_prefix;]$(customers)\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/customers/",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/customers",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_customer_$(customer_prefix).tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/customers"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/customers",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=customer_$(customer_prefix).tfplan",
                  "environmentServiceNameAzureRM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/customers",
                  "commandOptions": "customer_$(customer_prefix).tfplan",
                  "environmentServiceNameAzureRM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/customers",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(LIVEDATA_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)'",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": [
                  {
                    "alias": "artifact",
                    "artifactType": "Build",
                    "artifactDownloadMode": "All",
                    "artifactItems": []
                  }
                ]
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "eq(variables['isDeployPlatform'], true)",
              "overrideInputs": {}
            },
            "rank": 5,
            "phaseType": 1,
            "name": "Deploying Platform",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]plt\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/platform",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/platform",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_platform.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/platform"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/platform",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=platform.tfplan",
                  "environmentServiceNameAzureRM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/platform",
                  "commandOptions": "platform.tfplan",
                  "environmentServiceNameAzureRM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/platform",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -excludeWebApps @('*portalweb*','*mobileweb*')",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": [
                  {
                    "alias": "artifact",
                    "artifactType": "Build",
                    "artifactDownloadMode": "All",
                    "artifactItems": []
                  }
                ]
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "eq(variables['isDeployAnalytics'], true)",
              "overrideInputs": {}
            },
            "rank": 6,
            "phaseType": 1,
            "name": "Deploying Analytics",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]alt\"",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/analytics",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/analytics",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_analytics.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/analytics"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/analytics",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=analytics.tfplan",
                  "environmentServiceNameAzureRM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/analytics",
                  "commandOptions": "analytics.tfplan",
                  "environmentServiceNameAzureRM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "eq(variables['isDeployAlarm'], true)",
              "overrideInputs": {}
            },
            "rank": 7,
            "phaseType": 1,
            "name": "Deploying Alarm",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]alm\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/alarm",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/alarm",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_alarm.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/alarm"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/alarm",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=alarm.tfplan",
                  "environmentServiceNameAzureRM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/alarm",
                  "commandOptions": "alarm.tfplan",
                  "environmentServiceNameAzureRM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "and(eq(variables['isDeployAdmin'], true),eq(variables['location'], 'australiaeast'))",
              "overrideInputs": {}
            },
            "rank": 8,
            "phaseType": 1,
            "name": "Deploying Admin",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]adm\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/admin",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/admin",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_admin.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/admin"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/admin",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=admin.tfplan",
                  "environmentServiceNameAzureRM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/admin",
                  "commandOptions": "admin.tfplan",
                  "environmentServiceNameAzureRM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/admin",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -excludeWebApps @('*adminportalweb*')",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": true,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "and(eq(variables['isDeployMarketPlace'], true),eq(variables['location'], 'australiaeast'))",
              "overrideInputs": {}
            },
            "rank": 9,
            "phaseType": 1,
            "name": "Deploying MarketPlace",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]mkp\"",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/marketplace",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/marketplace",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_marketplace.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/marketplace"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/marketplace",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=marketplace.tfplan",
                  "environmentServiceNameAzureRM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/marketplace",
                  "commandOptions": "marketplace.tfplan",
                  "environmentServiceNameAzureRM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/marketplace",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Terraform Output variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-AzDevOpsVariables.ps1",
                  "arguments": "-agentVariables @{'marketplace_resource_group_name'='$(TF_RESOURCE_GROUP_NAME)';}",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -keyPermissions @('get','list','wrapkey','unwrapkey','encrypt','decrypt','verify','sign')",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "multipliers": "marketplace_applications",
                "maxNumberOfAgents": 3,
                "continueOnError": true,
                "parallelExecutionType": 1
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "and(eq(variables['isDeployMarketPlaceApplications'], true),eq(variables['location'], 'australiaeast'))",
              "overrideInputs": {}
            },
            "rank": 10,
            "phaseType": 1,
            "name": "Deploying MP App",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]mkp\"\nWrite-Host \"##vso[task.setvariable variable=application_prefix;]$(marketplace_applications)\"",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/applications",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/applications",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_marketplace_$(application_prefix).tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/applications"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/applications",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=marketplace_$(application_prefix).tfplan",
                  "environmentServiceNameAzureRM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/applications",
                  "commandOptions": "marketplace_$(application_prefix).tfplan",
                  "environmentServiceNameAzureRM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/applications",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -keyPermissions @('get','wrapkey','unwrapkey') -secretPermissions @('get','list')",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set Shared Marketplace KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(MARKETPLACE_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -keyPermissions @('get','list','wrapkey','unwrapkey','encrypt','decrypt','verify','sign') -secretPermissions @('get','list')",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "succeeded()",
              "overrideInputs": {}
            },
            "rank": 11,
            "phaseType": 1,
            "name": "Finalize",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set Shared KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "3b8b7c7e-6abf-4ee1-98ea-c2928e69d1e9",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(t2ResourceGroupName)' -appResourceGroup '$(t2ResourceGroupName)' -keyPermissions @('get','wrapkey','unwrapkey') -secretPermissions @() -excludeWebApps @('*portalweb*','*mobileweb*') -project '$(project)' -zone $(zone) -tier $(tier) -environment '$(environment)' -defaultRegion '$(defaultRegion)' -processAllWebApps",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          }
        ],
        "environmentOptions": {
          "emailNotificationType": "OnlyOnFailure",
          "emailRecipients": "release.environment.owner;release.creator",
          "skipArtifactsDownload": false,
          "timeoutInMinutes": 0,
          "enableAccessToken": false,
          "publishDeploymentStatus": true,
          "badgeEnabled": false,
          "autoLinkWorkItems": false,
          "pullRequestDeploymentEnabled": false
        },
        "demands": [],
        "conditions": [
          {
            "name": "sbx",
            "conditionType": 2,
            "value": "4"
          }
        ],
        "executionPolicy": {
          "concurrencyCount": 1,
          "queueDepthCount": 0
        },
        "schedules": [],
        "currentRelease": {
          "id": 744,
          "url": "https://vsrm.dev.azure.com/willowdev/64dd60c0-df93-46fe-b298-ec929c5029f8/_apis/Release/releases/744",
          "_links": {}
        },
        "retentionPolicy": {
          "daysToKeep": 30,
          "releasesToKeep": 3,
          "retainBuild": true
        },
        "processParameters": {},
        "properties": {
          "BoardsEnvironmentType": {
            "$type": "System.String",
            "$value": "unmapped"
          },
          "LinkBoardsWorkItems": {
            "$type": "System.String",
            "$value": "False"
          }
        },
        "preDeploymentGates": {
          "id": 0,
          "gatesOptions": null,
          "gates": []
        },
        "postDeploymentGates": {
          "id": 0,
          "gatesOptions": null,
          "gates": []
        },
        "environmentTriggers": [],
        "badgeUrl": "https://vsrm.dev.azure.com/willowdev/_apis/public/Release/badge/64dd60c0-df93-46fe-b298-ec929c5029f8/5/7"
      },
      {
        "id": 8,
        "name": "prd",
        "rank": 4,
        "owner": {
          "displayName": "Hassan Tariq",
          "url": "https://spsprodeau1.vssps.visualstudio.com/Aa03fb2e9-388e-4971-b5c5-96468575cfc5/_apis/Identities/7d36de27-6397-6e58-9a14-7a8275ce47be",
          "_links": {
            "avatar": {
              "href": "https://dev.azure.com/willowdev/_apis/GraphProfile/MemberAvatars/aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl"
            }
          },
          "id": "7d36de27-6397-6e58-9a14-7a8275ce47be",
          "uniqueName": "HTariq@willowinc.com",
          "imageUrl": "https://dev.azure.com/willowdev/_apis/GraphProfile/MemberAvatars/aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl",
          "descriptor": "aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl"
        },
        "variables": {
          "alerts_enabled": {
            "value": "true"
          },
          "app_service_enable_autoscale": {
            "value": "true"
          },
          "app_service_plan_sku_size": {
            "value": "S1"
          },
          "app_service_plan_sku_size_livedata": {
            "value": "P1V2"
          },
          "app_service_plan_sku_size_platform": {
            "value": "P1V2"
          },
          "app_service_plan_sku_tier": {
            "value": "Standard"
          },
          "app_service_plan_sku_tier_livedata": {
            "value": "PremiumV2"
          },
          "app_service_plan_sku_tier_platform": {
            "value": "PremiumV2"
          },
          "customers": {
            "value": "dex,inv,wkr,wlo"
          },
          "eventhub_sku": {
            "value": "Standard"
          },
          "frontdoor_dns_name": {
            "value": "willowinc.com"
          },
          "frontdoor_keyvault_certificate_secret_name": {
            "value": "willowinc-com"
          },
          "frontdoor_probe_interval_in_seconds": {
            "value": "120"
          },
          "isDeployGlobal": {
            "value": "false"
          },
          "marketplace_applications": {
            "value": "cpt,pgb,smn,mod,bac,oda,oua,fou,ins,imp,ang,nrd,vgs"
          },
          "notification_hub_apns_bundle_id": {
            "value": "com.willowinc.willow-command"
          },
          "notification_hub_gcm_api_key": {
            "value": "AAAAnIFNWn0:APA91bGHvwc3QsUvUCUoR2VUWQERobIIoLf0Gz58ujgA_zvBAYUuVw2Znknb1bWhiAgHM8Jvx0BQTYizUZTAuQ_175bGjyZoncTZ41u3QYww9-LLBKbE4Oq3NvLIEz04oCMCDoVb2Vld"
          },
          "postgresql_backup_retention_days": {
            "value": "30"
          },
          "postgresql_sku_name": {
            "value": "MO_Gen5_2"
          },
          "postgresql_storage_mb": {
            "value": "204800"
          },
          "sql_database_edition": {
            "value": "Standard"
          },
          "sql_database_edition_livedata": {
            "value": "Standard"
          },
          "sql_database_requested_service_objective_name": {
            "value": "S0"
          },
          "sql_database_requested_service_objective_name_livedata": {
            "value": "S3"
          },
          "storage_account_retention_days": {
            "value": "90"
          },
          "zone": {
            "value": "2"
          },
          "app_service_autoscale_maximum_capacity_livedata": {
            "value": "10"
          }
        },
        "variableGroups": [],
        "preDeployApprovals": {
          "approvals": [
            {
              "rank": 1,
              "isAutomated": false,
              "isNotificationOn": false,
              "approver": {
                "displayName": "Hassan Tariq",
                "url": "https://spsprodeau1.vssps.visualstudio.com/Aa03fb2e9-388e-4971-b5c5-96468575cfc5/_apis/Identities/7d36de27-6397-6e58-9a14-7a8275ce47be",
                "_links": {
                  "avatar": {
                    "href": "https://dev.azure.com/willowdev/_apis/GraphProfile/MemberAvatars/aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl"
                  }
                },
                "id": "7d36de27-6397-6e58-9a14-7a8275ce47be",
                "uniqueName": "HTariq@willowinc.com",
                "imageUrl": "https://dev.azure.com/willowdev/_apis/GraphProfile/MemberAvatars/aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl",
                "descriptor": "aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl"
              },
              "id": 23
            }
          ],
          "approvalOptions": {
            "requiredApproverCount": null,
            "releaseCreatorCanBeApprover": true,
            "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
            "enforceIdentityRevalidation": false,
            "timeoutInMinutes": 1440,
            "executionOrder": 1
          }
        },
        "deployStep": {
          "id": 24
        },
        "postDeployApprovals": {
          "approvals": [
            {
              "rank": 1,
              "isAutomated": true,
              "isNotificationOn": false,
              "id": 25
            }
          ],
          "approvalOptions": {
            "requiredApproverCount": null,
            "releaseCreatorCanBeApprover": false,
            "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
            "enforceIdentityRevalidation": false,
            "timeoutInMinutes": 0,
            "executionOrder": 2
          }
        },
        "deployPhases": [
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": true,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "succeeded()",
              "overrideInputs": {}
            },
            "rank": 1,
            "phaseType": 1,
            "name": "Deploying T2",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=tier;]2\"\nWrite-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/shared",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/shared",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_shared.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/shared"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/shared",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=shared.tfplan",
                  "environmentServiceNameAzureRM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/shared",
                  "commandOptions": "shared.tfplan",
                  "environmentServiceNameAzureRM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/shared",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-AzDevOpsVariables.ps1",
                  "arguments": "-agentVariables @{'t2ResourceGroupName'='$(TF_diagnostics_resource_group_name)';'environment'='$(TF_environment)';}",
                  "script": "Write-Host \"##vso[task.setvariable variable=tier;]2\"\nWrite-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "and(eq(variables['isDeployGlobal'], true),eq(variables['location'], 'australiaeast'))",
              "overrideInputs": {}
            },
            "rank": 2,
            "phaseType": 1,
            "name": "Deploying T2 Global resources",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=tier;]2\"\nWrite-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]lda\"",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/global",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/global",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)global.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/global"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/global",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=global.tfplan",
                  "environmentServiceNameAzureRM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/global",
                  "commandOptions": "global.tfplan",
                  "environmentServiceNameAzureRM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": true,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "eq(variables['isDeployLiveData'], true)",
              "overrideInputs": {}
            },
            "rank": 3,
            "phaseType": 1,
            "name": "Deploying LiveData",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/livedata",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/livedata",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_livedata.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/livedata"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/livedata",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=livedata.tfplan",
                  "environmentServiceNameAzureRM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/livedata",
                  "commandOptions": "livedata.tfplan",
                  "environmentServiceNameAzureRM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/livedata",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Terraform Output variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-AzDevOpsVariables.ps1",
                  "arguments": "-agentVariables @{'livedata_resource_group_name'='$(TF_RESOURCE_GROUP_NAME)';}",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)'",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "multipliers": "customers",
                "maxNumberOfAgents": 3,
                "continueOnError": true,
                "parallelExecutionType": 1
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": [
                  {
                    "alias": "artifact",
                    "artifactType": "Build",
                    "artifactDownloadMode": "All",
                    "artifactItems": []
                  }
                ]
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "eq(variables['isDeployCustomers'], true)",
              "overrideInputs": {}
            },
            "rank": 4,
            "phaseType": 1,
            "name": "Deploying Customer",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=customer_prefix;]$(customers)\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/customers/",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/customers",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_customer_$(customer_prefix).tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/customers"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/customers",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=customer_$(customers).tfplan",
                  "environmentServiceNameAzureRM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/customers",
                  "commandOptions": "customer_$(customers).tfplan",
                  "environmentServiceNameAzureRM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/customers",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(LIVEDATA_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)'",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": [
                  {
                    "alias": "artifact",
                    "artifactType": "Build",
                    "artifactDownloadMode": "All",
                    "artifactItems": []
                  }
                ]
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "eq(variables['isDeployPlatform'], true)",
              "overrideInputs": {}
            },
            "rank": 5,
            "phaseType": 1,
            "name": "Deploying Platform",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]plt\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/platform",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/platform",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_platform.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/platform"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/platform",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=platform.tfplan",
                  "environmentServiceNameAzureRM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/platform",
                  "commandOptions": "platform.tfplan",
                  "environmentServiceNameAzureRM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/platform",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -excludeWebApps @('*portalweb*','*mobileweb*')",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "eq(variables['isDeployAnalytics'], true)",
              "overrideInputs": {}
            },
            "rank": 6,
            "phaseType": 1,
            "name": "Deploying Analytics",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]alt\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/analytics",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/analytics",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_analytics.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/analytics"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/analytics",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=analytics.tfplan",
                  "environmentServiceNameAzureRM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/analytics",
                  "commandOptions": "analytics.tfplan",
                  "environmentServiceNameAzureRM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "eq(variables['isDeployAlarm'], true)",
              "overrideInputs": {}
            },
            "rank": 7,
            "phaseType": 1,
            "name": "Deploying Alarm",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]alm\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/alarm",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/alarm",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_alarm.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/alarm"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/alarm",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=alarm.tfplan",
                  "environmentServiceNameAzureRM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/alarm",
                  "commandOptions": "alarm.tfplan",
                  "environmentServiceNameAzureRM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": [
                  {
                    "alias": "artifact",
                    "artifactType": "Build",
                    "artifactDownloadMode": "All",
                    "artifactItems": []
                  }
                ]
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "and(eq(variables['isDeployAdmin'], true),eq(variables['location'], 'australiaeast'))",
              "overrideInputs": {}
            },
            "rank": 8,
            "phaseType": 1,
            "name": "Deploying Admin",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]adm\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/admin",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/admin",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_admin.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/admin"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/admin",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=admin.tfplan",
                  "environmentServiceNameAzureRM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/admin",
                  "commandOptions": "admin.tfplan",
                  "environmentServiceNameAzureRM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/admin",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -excludeWebApps @('*adminportalweb*')",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": [
                  {
                    "alias": "artifact",
                    "artifactType": "Build",
                    "artifactDownloadMode": "All",
                    "artifactItems": []
                  }
                ]
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": true,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "and(eq(variables['isDeployMarketPlace'], true),eq(variables['location'], 'australiaeast'))",
              "overrideInputs": {}
            },
            "rank": 9,
            "phaseType": 1,
            "name": "Deploying Marketplace",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]mkp\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/marketplace",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/marketplace",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_marketplace.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/marketplace"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/marketplace",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=marketplace.tfplan",
                  "environmentServiceNameAzureRM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/marketplace",
                  "commandOptions": "marketplace.tfplan",
                  "environmentServiceNameAzureRM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/marketplace",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Terraform Output variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-AzDevOpsVariables.ps1",
                  "arguments": "-agentVariables @{'marketplace_resource_group_name'='$(TF_RESOURCE_GROUP_NAME)';}",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -keyPermissions @('get','list','wrapkey','unwrapkey','encrypt','decrypt','verify','sign')",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "multipliers": "marketplace_applications",
                "maxNumberOfAgents": 3,
                "continueOnError": true,
                "parallelExecutionType": 1
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "and(eq(variables['isDeployMarketPlaceApplications'], true),eq(variables['location'], 'australiaeast'))",
              "overrideInputs": {}
            },
            "rank": 10,
            "phaseType": 1,
            "name": "Deploying MP App",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]mkp\"\nWrite-Host \"##vso[task.setvariable variable=application_prefix;]$(marketplace_applications)\"",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/applications",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/applications",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_marketplace_$(application_prefix).tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/applications"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/applications",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=marketplace_$(application_prefix).tfplan",
                  "environmentServiceNameAzureRM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/applications",
                  "commandOptions": "marketplace_$(application_prefix).tfplan",
                  "environmentServiceNameAzureRM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/applications",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -keyPermissions @('get','wrapkey','unwrapkey') -secretPermissions @('get','list')",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set Shared KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(MARKETPLACE_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -keyPermissions @('get','list','wrapkey','unwrapkey','encrypt','decrypt','verify','sign') -secretPermissions @('get','list')",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "succeeded()",
              "overrideInputs": {}
            },
            "rank": 11,
            "phaseType": 1,
            "name": "Finalize",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set Shared KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "23a2d18a-5739-43aa-96ae-c9a7d58c155b",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(t2ResourceGroupName)' -appResourceGroup '$(t2ResourceGroupName)' -keyPermissions @('get','wrapkey','unwrapkey') -secretPermissions @() -excludeWebApps @('*portalweb*','*mobileweb*') -project '$(project)' -zone $(zone) -tier $(tier) -environment '$(environment)' -defaultRegion '$(defaultRegion)' -processAllWebApps",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          }
        ],
        "environmentOptions": {
          "emailNotificationType": "OnlyOnFailure",
          "emailRecipients": "release.environment.owner;release.creator",
          "skipArtifactsDownload": false,
          "timeoutInMinutes": 0,
          "enableAccessToken": false,
          "publishDeploymentStatus": true,
          "badgeEnabled": false,
          "autoLinkWorkItems": false,
          "pullRequestDeploymentEnabled": false
        },
        "demands": [],
        "conditions": [
          {
            "name": "dev",
            "conditionType": 2,
            "value": "4"
          },
          {
            "name": "uat",
            "conditionType": 2,
            "value": "4"
          }
        ],
        "executionPolicy": {
          "concurrencyCount": 1,
          "queueDepthCount": 0
        },
        "schedules": [],
        "currentRelease": {
          "id": 744,
          "url": "https://vsrm.dev.azure.com/willowdev/64dd60c0-df93-46fe-b298-ec929c5029f8/_apis/Release/releases/744",
          "_links": {}
        },
        "retentionPolicy": {
          "daysToKeep": 30,
          "releasesToKeep": 3,
          "retainBuild": true
        },
        "processParameters": {},
        "properties": {
          "BoardsEnvironmentType": {
            "$type": "System.String",
            "$value": "unmapped"
          },
          "LinkBoardsWorkItems": {
            "$type": "System.String",
            "$value": "False"
          }
        },
        "preDeploymentGates": {
          "id": 0,
          "gatesOptions": null,
          "gates": []
        },
        "postDeploymentGates": {
          "id": 0,
          "gatesOptions": null,
          "gates": []
        },
        "environmentTriggers": [],
        "badgeUrl": "https://vsrm.dev.azure.com/willowdev/_apis/public/Release/badge/64dd60c0-df93-46fe-b298-ec929c5029f8/5/8"
      },
      {
        "id": 9,
        "name": "uat",
        "rank": 3,
        "owner": {
          "displayName": "Hassan Tariq",
          "url": "https://spsprodeau1.vssps.visualstudio.com/Aa03fb2e9-388e-4971-b5c5-96468575cfc5/_apis/Identities/7d36de27-6397-6e58-9a14-7a8275ce47be",
          "_links": {
            "avatar": {
              "href": "https://dev.azure.com/willowdev/_apis/GraphProfile/MemberAvatars/aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl"
            }
          },
          "id": "7d36de27-6397-6e58-9a14-7a8275ce47be",
          "uniqueName": "HTariq@willowinc.com",
          "imageUrl": "https://dev.azure.com/willowdev/_apis/GraphProfile/MemberAvatars/aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl",
          "descriptor": "aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl"
        },
        "variables": {
          "notification_hub_apns_bundle_id": {
            "value": "com.willowinc.willow-command-uat"
          },
          "notification_hub_gcm_api_key": {
            "value": "AAAAR-s4qiU:APA91bFyvGGpqIqHGho142LGgiURsjxsS_W7l9rFLRnkHG_tspYgMx4Bt2yUh3SAOhuyzlq-ocHGv1vAEbsqir_e4M0B7U1b5QqvlxwOmI5SmOxn2nuVGRBX7JHF3MyBsIOC4zPdReAi"
          },
          "sql_database_requested_service_objective_name_livedata": {
            "value": "S3"
          }
        },
        "variableGroups": [],
        "preDeployApprovals": {
          "approvals": [
            {
              "rank": 1,
              "isAutomated": false,
              "isNotificationOn": false,
              "approver": {
                "displayName": "Hassan Tariq",
                "url": "https://spsprodeau1.vssps.visualstudio.com/Aa03fb2e9-388e-4971-b5c5-96468575cfc5/_apis/Identities/7d36de27-6397-6e58-9a14-7a8275ce47be",
                "_links": {
                  "avatar": {
                    "href": "https://dev.azure.com/willowdev/_apis/GraphProfile/MemberAvatars/aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl"
                  }
                },
                "id": "7d36de27-6397-6e58-9a14-7a8275ce47be",
                "uniqueName": "HTariq@willowinc.com",
                "imageUrl": "https://dev.azure.com/willowdev/_apis/GraphProfile/MemberAvatars/aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl",
                "descriptor": "aad.N2QzNmRlMjctNjM5Ny03ZTU4LTlhMTQtN2E4Mjc1Y2U0N2Jl"
              },
              "id": 26
            }
          ],
          "approvalOptions": {
            "requiredApproverCount": null,
            "releaseCreatorCanBeApprover": true,
            "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
            "enforceIdentityRevalidation": false,
            "timeoutInMinutes": 1440,
            "executionOrder": 1
          }
        },
        "deployStep": {
          "id": 27
        },
        "postDeployApprovals": {
          "approvals": [
            {
              "rank": 1,
              "isAutomated": true,
              "isNotificationOn": false,
              "id": 28
            }
          ],
          "approvalOptions": {
            "requiredApproverCount": null,
            "releaseCreatorCanBeApprover": false,
            "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
            "enforceIdentityRevalidation": false,
            "timeoutInMinutes": 0,
            "executionOrder": 2
          }
        },
        "deployPhases": [
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": true,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "succeeded()",
              "overrideInputs": {}
            },
            "rank": 1,
            "phaseType": 1,
            "name": "Deploying T2",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=tier;]2\"\nWrite-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/shared",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/shared",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_shared.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/shared"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/shared",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=shared.tfplan",
                  "environmentServiceNameAzureRM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/shared",
                  "commandOptions": "shared.tfplan",
                  "environmentServiceNameAzureRM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/shared",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-AzDevOpsVariables.ps1",
                  "arguments": "-agentVariables @{'t2ResourceGroupName'='$(TF_diagnostics_resource_group_name)';'environment'='$(TF_environment)';}",
                  "script": "Write-Host \"##vso[task.setvariable variable=tier;]2\"\nWrite-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "and(eq(variables['isDeployGlobal'], true),eq(variables['location'], 'australiaeast'))",
              "overrideInputs": {}
            },
            "rank": 2,
            "phaseType": 1,
            "name": "Deploying T2 Global resources",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=tier;]2\"\nWrite-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]lda\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/global",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/global",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_global.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/global"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/global",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=global.tfplan",
                  "environmentServiceNameAzureRM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/global",
                  "commandOptions": "global.tfplan",
                  "environmentServiceNameAzureRM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": true,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "eq(variables['isDeployLiveData'], true)",
              "overrideInputs": {}
            },
            "rank": 3,
            "phaseType": 1,
            "name": "Deploying LiveData",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/livedata",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/livedata",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_livedata.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/livedata"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/livedata",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=livedata.tfplan",
                  "environmentServiceNameAzureRM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/livedata",
                  "commandOptions": "livedata.tfplan",
                  "environmentServiceNameAzureRM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/livedata",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Terraform Output variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-AzDevOpsVariables.ps1",
                  "arguments": "-agentVariables @{'livedata_resource_group_name'='$(TF_RESOURCE_GROUP_NAME)';}",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)'",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "multipliers": "customers",
                "maxNumberOfAgents": 3,
                "continueOnError": true,
                "parallelExecutionType": 1
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": [
                  {
                    "alias": "artifact",
                    "artifactType": "Build",
                    "artifactDownloadMode": "All",
                    "artifactItems": []
                  }
                ]
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "eq(variables['isDeployCustomers'], true)",
              "overrideInputs": {}
            },
            "rank": 4,
            "phaseType": 1,
            "name": "Deploying Customer",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=customer_prefix;]$(customers)\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/customers/",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/customers",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_customer_$(customer_prefix).tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/customers"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/customers",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=customer_$(customer_prefix).tfplan",
                  "environmentServiceNameAzureRM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/customers",
                  "commandOptions": "customer_$(customer_prefix).tfplan",
                  "environmentServiceNameAzureRM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/customers",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(LIVEDATA_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)'",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": [
                  {
                    "alias": "artifact",
                    "artifactType": "Build",
                    "artifactDownloadMode": "All",
                    "artifactItems": []
                  }
                ]
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "eq(variables['isDeployPlatform'], true)",
              "overrideInputs": {}
            },
            "rank": 5,
            "phaseType": 1,
            "name": "Deploying Platform",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]plt\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/platform",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/platform",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_platform.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/platform"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/platform",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=platform.tfplan",
                  "environmentServiceNameAzureRM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/platform",
                  "commandOptions": "platform.tfplan",
                  "environmentServiceNameAzureRM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/platform",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -excludeWebApps @('*portalweb*','*mobileweb*')",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "eq(variables['isDeployAnalytics'], true)",
              "overrideInputs": {}
            },
            "rank": 6,
            "phaseType": 1,
            "name": "Deploying Analytics",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]alt\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/analytics",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/analytics",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_analytics.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/analytics"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/analytics",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=analytics.tfplan",
                  "environmentServiceNameAzureRM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/analytics",
                  "commandOptions": "analytics.tfplan",
                  "environmentServiceNameAzureRM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "eq(variables['isDeployAlarm'], true)",
              "overrideInputs": {}
            },
            "rank": 7,
            "phaseType": 1,
            "name": "Deploying Alarm",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]alm\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/alarm",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/alarm",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_alarm.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/alarm"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/alarm",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=alarm.tfplan",
                  "environmentServiceNameAzureRM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/alarm",
                  "commandOptions": "alarm.tfplan",
                  "environmentServiceNameAzureRM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "and(eq(variables['isDeployAdmin'], true),eq(variables['location'], 'australiaeast'))",
              "overrideInputs": {}
            },
            "rank": 8,
            "phaseType": 1,
            "name": "Deploying Admin",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]adm\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/admin",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/admin",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_admin.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/admin"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/admin",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=admin.tfplan",
                  "environmentServiceNameAzureRM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/admin",
                  "commandOptions": "admin.tfplan",
                  "environmentServiceNameAzureRM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/admin",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -excludeWebApps @('*adminportalweb*')",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": true,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "and(eq(variables['isDeployMarketPlace'], true),eq(variables['location'], 'australiaeast'))",
              "overrideInputs": {}
            },
            "rank": 9,
            "phaseType": 1,
            "name": "Deploying MarketPlace",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]mkp\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/marketplace",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/marketplace",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_marketplace.tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/marketplace"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/marketplace",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=marketplace.tfplan",
                  "environmentServiceNameAzureRM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/marketplace",
                  "commandOptions": "marketplace.tfplan",
                  "environmentServiceNameAzureRM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/marketplace",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Terraform Output variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-AzDevOpsVariables.ps1",
                  "arguments": "-agentVariables @{'marketplace_resource_group_name'='$(TF_RESOURCE_GROUP_NAME)';}",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/platform"
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -keyPermissions @('get','list','wrapkey','unwrapkey','encrypt','decrypt','verify','sign')",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "multipliers": "marketplace_applications",
                "maxNumberOfAgents": 3,
                "continueOnError": true,
                "parallelExecutionType": 1
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "and(eq(variables['isDeployMarketPlaceApplications'], true),eq(variables['location'], 'australiaeast'))",
              "overrideInputs": {}
            },
            "rank": 10,
            "phaseType": 1,
            "name": "Deploying MP App",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Set Environment Variables",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "inline",
                  "filePath": "",
                  "arguments": "",
                  "script": "Write-Host \"##vso[task.setvariable variable=release_id;]$(Release.ReleaseName)\"\nWrite-Host \"##vso[task.setvariable variable=release_url;]$(Release.ReleaseWebUrl)\"\n\nWrite-Host \"##vso[task.setvariable variable=project_prefix;]mkp\"\nWrite-Host \"##vso[task.setvariable variable=application_prefix;]$(marketplace_applications)\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
                "version": "3.*",
                "name": "Replace tokens",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "rootDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/applications",
                  "targetFiles": "parameters/terraform.tfvars\nprovider.tf",
                  "encoding": "auto",
                  "writeBOM": "true",
                  "escapeType": "auto",
                  "escapeChar": "",
                  "charsToEscape": "",
                  "verbosity": "normal",
                  "actionOnMissing": "warn",
                  "keepToken": "false",
                  "tokenPrefix": "${",
                  "tokenSuffix": "}$",
                  "useLegacyPattern": "false",
                  "emptyValue": "(empty)",
                  "variableFiles": "",
                  "variableSeparator": ".",
                  "enableTelemetry": "false"
                }
              },
              {
                "environment": {},
                "taskId": "a4789e5d-f6e8-431f-add9-379d640a883c",
                "version": "0.*",
                "name": "Install Terraform",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "terraformVersion": "$(TF-version)"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm init",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "init",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/applications",
                  "commandOptions": "-backend-config=resource_group_name=\"$(state-resource-group-name)\" -backend-config=storage_account_name=\"$(state-storage-account-name)\" -backend-config=sas_token=\"$(state-storage-account-sas-token)\"",
                  "environmentServiceNameAzureRM": "",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "dd556f97-4f87-4e4d-8c9a-79f7fc4b7429",
                  "backendAzureRmResourceGroupName": "$(state-resource-group-name)",
                  "backendAzureRmStorageAccountName": "$(state-storage-account-name)",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "$(Release.EnvironmentName)/$(project)/$(location)/terraform_t$(tier)_z$(zone)_marketplace_$(application_prefix).tfstate",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "version": "2.*",
                "name": "Terraform : Set Workspace",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "targetType": "filePath",
                  "filePath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-TerraformWorkspace.ps1",
                  "arguments": "$(Release.EnvironmentName)",
                  "script": "# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n",
                  "errorActionPreference": "stop",
                  "failOnStderr": "false",
                  "ignoreLASTEXITCODE": "false",
                  "pwsh": "false",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/applications"
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm plan",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "plan",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/applications",
                  "commandOptions": "-var-file=parameters/terraform.tfvars -out=marketplace_$(application_prefix).tfplan",
                  "environmentServiceNameAzureRM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "fe504acc-6115-40cb-89ff-191386b5e7bf",
                "version": "0.*",
                "name": "Terraform : azurerm validate and apply",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "provider": "azurerm",
                  "command": "apply",
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/applications",
                  "commandOptions": "marketplace_$(application_prefix).tfplan",
                  "environmentServiceNameAzureRM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "environmentServiceNameAWS": "",
                  "environmentServiceNameGCP": "",
                  "backendServiceArm": "583c4192-2656-49bb-b9b6-f3806767fda4",
                  "backendAzureRmResourceGroupName": "t1-wil-plt-sbx-rsg-shr-aue",
                  "backendAzureRmStorageAccountName": "artifact2svf38tkep",
                  "backendAzureRmContainerName": "terraform-state",
                  "backendAzureRmKey": "Hk0q/z3tD2sZTjj+KBG5z5Eo4kOfDPyKJ2ZpekKwhvx+y5mkjdHe/krMOm+PJNKxqgE3gQFJeqlhjIaf7ZpZtQ==",
                  "backendServiceAWS": "",
                  "backendAWSBucketName": "",
                  "backendAWSKey": "",
                  "backendServiceGCP": "",
                  "backendGCPBucketName": "",
                  "backendGCPPrefix": ""
                }
              },
              {
                "environment": {},
                "taskId": "3a975567-6da1-48c9-8772-0ebec93fa05c",
                "version": "0.*",
                "name": "Terraform Outputs",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "workingDirectory": "$(System.DefaultWorkingDirectory)/artifact/Workspaces/applications",
                  "mapSensitiveOutputsAsSecrets": "false",
                  "variablePrefix": "TF_",
                  "pathToTerraform": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -keyPermissions @('get','wrapkey','unwrapkey') -secretPermissions @('get','list')",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              },
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set Shared Marketplace KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(MARKETPLACE_RESOURCE_GROUP_NAME)' -appResourceGroup '$(TF_RESOURCE_GROUP_NAME)' -keyPermissions @('get','list','wrapkey','unwrapkey','encrypt','decrypt','verify','sign') -secretPermissions @('get','list')",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          },
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": 0
              },
              "agentSpecification": {
                "identifier": "vs2017-win2016"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 107,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "succeeded()",
              "overrideInputs": {}
            },
            "rank": 11,
            "phaseType": 1,
            "name": "Finalize",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
                "version": "4.*",
                "name": "Azure : Set Shared KeyVault Access Policies",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "ConnectedServiceNameARM": "f5fb0e62-9a26-4076-97a6-f1e8566fb7b1",
                  "ScriptType": "FilePath",
                  "ScriptPath": "$(System.DefaultWorkingDirectory)/artifact/Scripts/Set-KeyVaultAccessPolicies.ps1",
                  "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                  "ScriptArguments": "-mgtResourceGroup '$(t2ResourceGroupName)' -appResourceGroup '$(t2ResourceGroupName)' -keyPermissions @('get','wrapkey','unwrapkey') -secretPermissions @() -excludeWebApps @('*portalweb*','*mobileweb*') -project '$(project)' -zone $(zone) -tier $(tier) -environment '$(environment)' -defaultRegion '$(defaultRegion)' -processAllWebApps",
                  "errorActionPreference": "stop",
                  "FailOnStandardError": "false",
                  "TargetAzurePs": "LatestVersion",
                  "CustomTargetAzurePs": "",
                  "pwsh": "false",
                  "workingDirectory": ""
                }
              }
            ]
          }
        ],
        "environmentOptions": {
          "emailNotificationType": "OnlyOnFailure",
          "emailRecipients": "release.environment.owner;release.creator",
          "skipArtifactsDownload": false,
          "timeoutInMinutes": 0,
          "enableAccessToken": false,
          "publishDeploymentStatus": true,
          "badgeEnabled": false,
          "autoLinkWorkItems": false,
          "pullRequestDeploymentEnabled": false
        },
        "demands": [],
        "conditions": [
          {
            "name": "dev",
            "conditionType": 2,
            "value": "4"
          }
        ],
        "executionPolicy": {
          "concurrencyCount": 1,
          "queueDepthCount": 0
        },
        "schedules": [],
        "currentRelease": {
          "id": 744,
          "url": "https://vsrm.dev.azure.com/willowdev/64dd60c0-df93-46fe-b298-ec929c5029f8/_apis/Release/releases/744",
          "_links": {}
        },
        "retentionPolicy": {
          "daysToKeep": 30,
          "releasesToKeep": 3,
          "retainBuild": true
        },
        "processParameters": {},
        "properties": {
          "BoardsEnvironmentType": {
            "$type": "System.String",
            "$value": "unmapped"
          },
          "LinkBoardsWorkItems": {
            "$type": "System.String",
            "$value": "False"
          }
        },
        "preDeploymentGates": {
          "id": 0,
          "gatesOptions": null,
          "gates": []
        },
        "postDeploymentGates": {
          "id": 0,
          "gatesOptions": null,
          "gates": []
        },
        "environmentTriggers": [],
        "badgeUrl": "https://vsrm.dev.azure.com/willowdev/_apis/public/Release/badge/64dd60c0-df93-46fe-b298-ec929c5029f8/5/9"
      }
    ],
    "artifacts": [
      {
        "sourceId": "64dd60c0-df93-46fe-b298-ec929c5029f8:161",
        "type": "Build",
        "alias": "artifact",
        "definitionReference": {
          "artifactSourceDefinitionUrl": {
            "id": "https://dev.azure.com/willowdev/_permalink/_build/index?collectionId=f3231a42-1433-42c4-9fbd-03058368d6d7&projectId=64dd60c0-df93-46fe-b298-ec929c5029f8&definitionId=161",
            "name": ""
          },
          "defaultVersionBranch": {
            "id": "",
            "name": ""
          },
          "defaultVersionSpecific": {
            "id": "",
            "name": ""
          },
          "defaultVersionTags": {
            "id": "",
            "name": ""
          },
          "defaultVersionType": {
            "id": "latestType",
            "name": "Latest"
          },
          "definition": {
            "id": "161",
            "name": "Customers"
          },
          "definitions": {
            "id": "",
            "name": ""
          },
          "IsMultiDefinitionType": {
            "id": "False",
            "name": "False"
          },
          "project": {
            "id": "64dd60c0-df93-46fe-b298-ec929c5029f8",
            "name": "AzurePlatform"
          },
          "repository": {
            "id": "",
            "name": ""
          }
        },
        "isPrimary": true,
        "isRetained": false
      }
    ],
    "triggers": [],
    "releaseNameFormat": "Release-$(rev:r)",
    "tags": [],
    "properties": {
      "DefinitionCreationSource": {
        "$type": "System.String",
        "$value": "ReleaseNew"
      },
      "IntegrateJiraWorkItems": {
        "$type": "System.String",
        "$value": "false"
      },
      "IntegrateBoardsWorkItems": {
        "$type": "System.String",
        "$value": "False"
      }
    },
    "id": 5,
    "name": "WillowPlatform-CD",
    "path": "\\",
    "projectReference": null,
    "url": "https://vsrm.dev.azure.com/willowdev/64dd60c0-df93-46fe-b298-ec929c5029f8/_apis/Release/definitions/5",
    "_links": {
      "self": {
        "href": "https://vsrm.dev.azure.com/willowdev/64dd60c0-df93-46fe-b298-ec929c5029f8/_apis/Release/definitions/5"
      },
      "web": {
        "href": "https://dev.azure.com/willowdev/64dd60c0-df93-46fe-b298-ec929c5029f8/_release?definitionId=5"
      }
    }
  }
